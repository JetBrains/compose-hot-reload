public final class org/jetbrains/compose/reload/orchestration/CoroutineExtensionsKt {
	public static final fun asBlockingQueue (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;)Ljava/util/concurrent/BlockingQueue;
	public static final fun asChannel (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;)Lkotlinx/coroutines/channels/ReceiveChannel;
	public static final fun asFlow (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;)Lkotlinx/coroutines/flow/Flow;
	public static final fun flowOf (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStates;Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKey;)Lkotlinx/coroutines/flow/Flow;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestartionLoggingKt {
	public static final fun LogMessage-Xm7hTEE (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/jetbrains/compose/reload/core/Logger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage;
	public static synthetic fun LogMessage-Xm7hTEE$default (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/jetbrains/compose/reload/core/Logger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage;
}

public abstract interface class org/jetbrains/compose/reload/orchestration/OrchestrationClient : org/jetbrains/compose/reload/orchestration/OrchestrationHandle {
	public abstract fun connect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getClientId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public abstract fun getClientRole ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationClient$DefaultImpls {
	public static fun close (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;)V
	public static fun fold (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static fun get (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;
	public static fun getKey (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;)Lkotlin/coroutines/CoroutineContext$Key;
	public static fun minusKey (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;
	public static fun plus (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationClientId : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationClientId$Companion {
	public final fun random ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationClientKt {
	public static final fun OrchestrationClient (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;
	public static final fun OrchestrationClient (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;I)Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;
	public static final fun connectOrchestrationClient (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationClientRole : java/lang/Enum, java/io/Serializable {
	public static final field Application Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public static final field Compiler Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public static final field Tooling Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public static final field Unknown Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public static fun values ()[Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationConnectionsState : org/jetbrains/compose/reload/orchestration/OrchestrationState {
	public static final field Key Lorg/jetbrains/compose/reload/orchestration/OrchestrationConnectionsState$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnections ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationConnectionsState$Connection {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;)V
	public synthetic fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun getClientPid ()Ljava/lang/Long;
	public final fun getClientRole ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationConnectionsState$Key : org/jetbrains/compose/reload/orchestration/OrchestrationStateKey {
	public fun getDefault ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationConnectionsState;
	public synthetic fun getDefault ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;
	public fun getId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;
}

public abstract interface class org/jetbrains/compose/reload/orchestration/OrchestrationHandle : java/lang/AutoCloseable, org/jetbrains/compose/reload/core/Task {
	public abstract fun close ()V
	public abstract fun getMessages ()Lorg/jetbrains/compose/reload/core/Broadcast;
	public abstract fun getPort ()Lorg/jetbrains/compose/reload/core/Future;
	public abstract fun getStates ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationStates;
	public abstract fun send (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun tryUpdate (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKey;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun update (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKey;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationHandle$DefaultImpls {
	public static fun close (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;)V
	public static fun fold (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static fun get (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;
	public static fun getKey (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;)Lkotlin/coroutines/CoroutineContext$Key;
	public static fun minusKey (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;
	public static fun plus (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationHandleKt {
	public static final fun connectBlocking (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClient;)Lorg/jetbrains/compose/reload/core/Either;
	public static final fun invokeOnClose (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Lkotlin/jvm/functions/Function0;)V
	public static final fun sendAsync (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage;)Lorg/jetbrains/compose/reload/core/Future;
	public static final fun sendBlocking (Lorg/jetbrains/compose/reload/orchestration/OrchestrationHandle;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage;)Lorg/jetbrains/compose/reload/core/Either;
	public static final fun startBlocking (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;)Lorg/jetbrains/compose/reload/core/Either;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationIOException : java/io/IOException {
	public static final field serialVersionUID J
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
}

public abstract class org/jetbrains/compose/reload/orchestration/OrchestrationMessage : org/jetbrains/compose/reload/orchestration/OrchestrationPackage, java/io/Serializable {
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessageId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$Ack : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;)V
	public final fun component1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public final fun copy (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$Ack;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$Ack;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$Ack;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAcknowledgedMessageId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGainedFocus : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-9Ua70vA ()Ljava/lang/String;
	public final fun copy-1Pd5hO4 (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGainedFocus;
	public static synthetic fun copy-1Pd5hO4$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGainedFocus;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGainedFocus;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getWindowId-9Ua70vA ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGone : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-9Ua70vA ()Ljava/lang/String;
	public final fun copy-1Pd5hO4 (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGone;
	public static synthetic fun copy-1Pd5hO4$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGone;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowGone;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getWindowId-9Ua70vA ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowPositioned : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public synthetic fun <init> (Ljava/lang/String;IIIIZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-9Ua70vA ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()Z
	public final fun copy-SZU1Zz8 (Ljava/lang/String;IIIIZ)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowPositioned;
	public static synthetic fun copy-SZU1Zz8$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowPositioned;Ljava/lang/String;IIIIZILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ApplicationWindowPositioned;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()I
	public final fun getWidth ()I
	public final fun getWindowId-9Ua70vA ()Ljava/lang/String;
	public final fun getX ()I
	public final fun getY ()I
	public fun hashCode ()I
	public final fun isAlwaysOnTop ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildEvent : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildFinished : org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildEvent {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildStarted : org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildEvent {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult : org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildEvent {
	public fun <init> (Ljava/lang/String;ZZLjava/lang/Long;Ljava/lang/Long;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Ljava/lang/Long;
	public final fun component5 ()Ljava/lang/Long;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZZLjava/lang/Long;Ljava/lang/Long;Ljava/util/List;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult;Ljava/lang/String;ZZLjava/lang/Long;Ljava/lang/Long;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndTime ()Ljava/lang/Long;
	public final fun getFailures ()Ljava/util/List;
	public final fun getStartTime ()Ljava/lang/Long;
	public final fun getTaskId ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isSkipped ()Z
	public final fun isSuccess ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult$BuildTaskFailure : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult$BuildTaskFailure;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult$BuildTaskFailure;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$BuildTaskResult$BuildTaskFailure;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$CleanCompositionRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientConnected : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;)V
	public synthetic fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun component2 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public final fun component3 ()Ljava/lang/Long;
	public final fun copy (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientConnected;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientConnected;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientConnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun getClientPid ()Ljava/lang/Long;
	public final fun getClientRole ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientDisconnected : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;)V
	public final fun component1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun component2 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public final fun copy (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientDisconnected;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientDisconnected;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ClientDisconnected;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun getClientRole ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$CriticalException : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Throwable;)V
	public final fun getClientRole ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public final fun getExceptionClassName ()Ljava/lang/String;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getStacktrace ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (ILjava/util/List;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ILjava/util/List;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage;ILjava/util/List;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDirtyScopes ()Ljava/util/List;
	public final fun getGroupKey ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;Ljava/lang/String;Ljava/lang/Integer;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;Ljava/lang/String;Ljava/lang/Integer;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;Ljava/lang/String;Ljava/lang/Integer;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClassId ()Ljava/lang/String;
	public final fun getFirstLineNumber ()Ljava/lang/Integer;
	public final fun getMethodDescriptor ()Ljava/lang/String;
	public final fun getMethodName ()Ljava/lang/String;
	public final fun getScopeType ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public final fun getSourceFile ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType : java/lang/Enum, java/io/Serializable {
	public static final field Method Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public static final field ReplaceGroup Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public static final field RestartGroup Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public static final field SourceInformationMarker Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
	public static fun values ()[Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$InvalidatedComposeGroupMessage$DirtyScope$ScopeType;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage : org/jetbrains/compose/reload/orchestration/OrchestrationMessage, org/jetbrains/compose/reload/core/Logger$Log {
	public static final field Companion Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage$Companion;
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/jetbrains/compose/reload/core/Logger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-mvyzyrg ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()J
	public final fun component5 ()Lorg/jetbrains/compose/reload/core/Logger$Level;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/util/List;
	public final fun copy-1t-9WfE (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/jetbrains/compose/reload/core/Logger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage;
	public static synthetic fun copy-1t-9WfE$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/jetbrains/compose/reload/core/Logger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage;
	public fun equals (Ljava/lang/Object;)Z
	public fun getEnvironment-mvyzyrg ()Ljava/lang/String;
	public fun getLevel ()Lorg/jetbrains/compose/reload/core/Logger$Level;
	public fun getLoggerName ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun getThreadName ()Ljava/lang/String;
	public fun getThrowableClassName ()Ljava/lang/String;
	public fun getThrowableMessage ()Ljava/lang/String;
	public fun getThrowableStacktrace ()Ljava/util/List;
	public fun getTimestamp ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$LogMessage$Companion {
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$Ping : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$RecompileRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$RecompileResult : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;Ljava/lang/Integer;)V
	public final fun getExitCode ()Ljava/lang/Integer;
	public final fun getRecompileRequestId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$RecompilerReady : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public static final field Key Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$Key;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest;Ljava/util/Map;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChangedClassFiles ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$ChangeType : java/lang/Enum, java/io/Serializable {
	public static final field Added Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$ChangeType;
	public static final field Modified Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$ChangeType;
	public static final field Removed Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$ChangeType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$ChangeType;
	public static fun values ()[Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$ChangeType;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesRequest$Key : org/jetbrains/compose/reload/core/Context$Key$Optional {
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesResult : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;ZLjava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;ZLjava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;ZLjava/lang/String;Ljava/util/List;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesResult;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesResult;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;ZLjava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ReloadClassesResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrorMessage ()Ljava/lang/String;
	public final fun getErrorStacktrace ()Ljava/util/List;
	public final fun getReloadRequestId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public fun hashCode ()I
	public final fun isSuccess ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$RestartRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$RetryFailedCompositionRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$Screenshot : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Ljava/lang/String;[B)V
	public final fun getData ()[B
	public final fun getFormat ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$ShutdownRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/io/File;)V
	public fun <init> (Ljava/lang/String;Ljava/io/File;Ljava/lang/Long;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/io/File;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/io/File;
	public final fun component3 ()Ljava/lang/Long;
	public final fun copy (Ljava/lang/String;Ljava/io/File;Ljava/lang/Long;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ShutdownRequest;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ShutdownRequest;Ljava/lang/String;Ljava/io/File;Ljava/lang/Long;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$ShutdownRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPid ()Ljava/lang/Long;
	public final fun getPidFile ()Ljava/io/File;
	public final fun getReason ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isApplicable ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$TakeScreenshotRequest : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> ()V
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$TestEvent : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$TestEvent;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$TestEvent;Ljava/lang/Object;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$TestEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPayload ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$UIException : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getMessage ()Ljava/lang/String;
	public final fun getStacktrace ()Ljava/util/List;
	public final fun getWindowId-cPrXUn0 ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessage$UIRendered : org/jetbrains/compose/reload/orchestration/OrchestrationMessage {
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-cPrXUn0 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public final fun component3 ()I
	public final fun copy-2nQi_z8 (Ljava/lang/String;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;I)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$UIRendered;
	public static synthetic fun copy-2nQi_z8$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$UIRendered;Ljava/lang/String;Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;IILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessage$UIRendered;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIteration ()I
	public final fun getReloadRequestId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public final fun getWindowId-cPrXUn0 ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessageId : java/io/Serializable {
	public static final field serialVersionUID J
	public fun <init> (Ljava/lang/String;)V
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
	public final fun encodeToByteArray ()[B
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationMessageKt {
	public static final fun OrchestrationMessageId ([B)Lorg/jetbrains/compose/reload/orchestration/OrchestrationMessageId;
}

public abstract class org/jetbrains/compose/reload/orchestration/OrchestrationPackage : java/io/Serializable {
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationPackage$Introduction : org/jetbrains/compose/reload/orchestration/OrchestrationPackage, java/io/Serializable {
	public static final field serialVersionUID J
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;)V
	public synthetic fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun component2 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public final fun component3 ()Ljava/lang/Long;
	public final fun copy (Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationPackage$Introduction;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationPackage$Introduction;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;Ljava/lang/Long;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationPackage$Introduction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClientId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientId;
	public final fun getClientPid ()Ljava/lang/Long;
	public final fun getClientRole ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationClientRole;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion$Companion;
	public static final field V1 Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
	public static final field V1_1 Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
	public static final field V1_2 Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
	public static final field V1_3 Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getIntValue ()I
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
	public static fun values ()[Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion$Companion {
	public final fun from (I)Lorg/jetbrains/compose/reload/core/Either;
	public final fun getCurrent ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationProtocolVersion;
}

public abstract interface class org/jetbrains/compose/reload/orchestration/OrchestrationServer : org/jetbrains/compose/reload/orchestration/OrchestrationHandle {
	public abstract fun bind (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun connectClient (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun start (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationServer$DefaultImpls {
	public static fun close (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;)V
	public static fun fold (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static fun get (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;
	public static fun getKey (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;)Lkotlin/coroutines/CoroutineContext$Key;
	public static fun minusKey (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;
	public static fun plus (Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationServerKt {
	public static final fun OrchestrationServer ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;
	public static final fun startOrchestrationServer ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationServer;
}

public abstract interface class org/jetbrains/compose/reload/orchestration/OrchestrationState {
}

public abstract interface class org/jetbrains/compose/reload/orchestration/OrchestrationStateEncoder {
	public abstract fun decode ([B)Lorg/jetbrains/compose/reload/core/Either;
	public abstract fun encode (Ljava/lang/Object;)[B
	public abstract fun getType-cAobLks ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationStateId : java/io/Serializable {
	public static final field serialVersionUID J
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-cAobLks ()Ljava/lang/String;
	public final fun copy-FrHJmyY (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;
	public static synthetic fun copy-FrHJmyY$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getType-cAobLks ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/compose/reload/orchestration/OrchestrationStateKey {
	public fun <init> ()V
	public abstract fun getDefault ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;
	public abstract fun getId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationStateKeyImpl : org/jetbrains/compose/reload/orchestration/OrchestrationStateKey {
	public fun <init> (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;)V
	public final fun component1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;
	public final fun component2 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;
	public final fun copy (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKeyImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKeyImpl;Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;ILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKeyImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDefault ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationState;
	public fun getId ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateId;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/compose/reload/orchestration/OrchestrationStates {
	public abstract fun get (Lorg/jetbrains/compose/reload/orchestration/OrchestrationStateKey;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationVersion : java/lang/Comparable {
	public static final field Companion Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion$Companion;
	public fun <init> (I)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;)I
	public final fun component1 ()I
	public final fun copy (I)Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
	public static synthetic fun copy$default (Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;IILjava/lang/Object;)Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIntValue ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/compose/reload/orchestration/OrchestrationVersion$Companion {
	public final fun getCurrent ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
	public final fun getV1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
	public final fun getV1_1 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
	public final fun getV1_2 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
	public final fun getV1_3 ()Lorg/jetbrains/compose/reload/orchestration/OrchestrationVersion;
}

