/* Code */
import androidx.compose.runtime.*

@Composable
fun Foot(param: String): String {
    return key(param) {
        if (param.isEmpty()) {
            "Empty"
        } else {
            val state = remember { mutableStateOf("") }
            state.value
        }
    }
}

 /* Tree */ 
class TestKt {
    fun Foot (Ljava/lang/String;Landroidx/compose/runtime/Composer;I)Ljava/lang/String; {
        Method (group=ComposeGroupKey(key=-227918768)) {
            LabelToken(L0)
            BlockToken(4)
            JumpToken(L1, opocde=153)
            BlockToken(5)
            LabelToken(L1)
            BlockToken(3)
            LabelToken(L2, lineNumber=5)
            BlockToken(2)
            LabelToken(L3, lineNumber=6)
            BlockToken(3)
            JumpToken(L4, opocde=154)
            BlockToken(1)
            JumpToken(L5, opocde=167)
            LabelToken(L4)
            BlockToken(2)
            LabelToken(L5, lineNumber=6)
            BlockToken(1)
            JumpToken(L7, opocde=153)
            BlockToken(1)
            LabelToken(L6, lineNumber=7)
            BlockToken(1)
            JumpToken(L26, opocde=167)
            LabelToken(L7)
            BlockToken(2)
            BlockToken(1)
            LabelToken(L26, lineNumber=6)
            BlockToken(5)
            LabelToken(L27, lineNumber=5)
            BlockToken(2)
            JumpToken(L28, opocde=153)
            BlockToken(1)
            LabelToken(L28)
            BlockToken(2)
            ReturnToken(returnInsn=176)
    
            ReplaceGroup (group=ComposeGroupKey(key=415364755)) {
                StartReplaceGroup(key=ComposeGroupKey(key=415364755))
                BlockToken(1)
                EndReplaceGroup()
            }
    
            ReplaceGroup (group=ComposeGroupKey(key=415403319)) {
                StartReplaceGroup(key=ComposeGroupKey(key=415403319))
                BlockToken(4)
                LabelToken(L9, lineNumber=9)
                BlockToken(1)
                LabelToken(L10)
                BlockToken(2)
                LabelToken(L11, lineNumber=14)
                BlockToken(3)
                LabelToken(L12)
                BlockToken(2)
                LabelToken(L13, lineNumber=15)
                BlockToken(3)
                JumpToken(L20, opocde=166)
                LabelToken(L14, lineNumber=16)
                BlockToken(2)
                LabelToken(L15, lineNumber=9)
                BlockToken(5)
                LabelToken(L16, lineNumber=16)
                BlockToken(1)
                LabelToken(L17, lineNumber=17)
                BlockToken(3)
                LabelToken(L18, lineNumber=18)
                BlockToken(1)
                LabelToken(L19)
                JumpToken(L21, opocde=167)
                LabelToken(L20, lineNumber=19)
                BlockToken(2)
                LabelToken(L21, lineNumber=14)
                BlockToken(2)
                LabelToken(L22, lineNumber=14)
                BlockToken(1)
                LabelToken(L23, lineNumber=9)
                BlockToken(2)
                LabelToken(L24, lineNumber=10)
                BlockToken(2)
                LabelToken(L25, lineNumber=8)
                BlockToken(3)
                EndReplaceGroup()
            }
        }
    }
}